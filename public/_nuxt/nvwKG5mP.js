import{B as w,N as H,u as R,ax as h,a9 as M,ay as S,b as F,Q as j,az as z,aA as U,r as L,aB as B,af as I,aC as Q,E as V,aD as q}from"./DKjhEE28.js";const G={trailing:!0};function J(a,t=25,l={}){if(l={...G,...l},!Number.isFinite(t))throw new TypeError("Expected `wait` to be a finite number");let n,e,r=[],s,m;const c=(_,u)=>(s=W(a,_,u),s.finally(()=>{if(s=null,l.trailing&&m&&!e){const v=c(_,m);return m=null,v}}),s);return function(..._){return s?(l.trailing&&(m=_),s):new Promise(u=>{const v=!e&&l.leading;clearTimeout(e),e=setTimeout(()=>{e=null;const o=l.leading?n:c(this,_);for(const D of r)D(o);r=[]},t),v?(n=c(this,_),u(n)):r.push(u)})}}async function W(a,t,l){return await a.apply(t,l)}const X=a=>a==="defer"||a===!1;function $(...a){var C;const t=typeof a[a.length-1]=="string"?a.pop():void 0;typeof a[0]!="string"&&typeof a[0]!="object"&&!(typeof a[0]=="function"&&typeof a[1]=="function")&&a.unshift(t);let[l,n,e={}]=a;const r=w(()=>H(l));if(typeof r.value!="string")throw new TypeError("[nuxt] [useAsyncData] key must be a string.");if(typeof n!="function")throw new TypeError("[nuxt] [useAsyncData] handler must be a function.");const s=R(),m=()=>h.value,c=(y,d,P)=>{if(d.isHydrating)return d.payload.data[y];if(P.cause!=="refresh:manual"&&P.cause!=="refresh:hook")return d.static.data[y]};e.server??(e.server=!0),e.default??(e.default=m),e.getCachedData??(e.getCachedData=c),e.lazy??(e.lazy=!1),e.immediate??(e.immediate=!0),e.deep??(e.deep=h.deep),e.dedupe??(e.dedupe="cancel"),e._functionName,s._asyncData[r.value];const _=e.getCachedData(r.value,s,{cause:"initial"});(C=s._asyncData[r.value])!=null&&C._deps||(s._asyncData[r.value]=O(s,r.value,n,e,_));const u=s._asyncData[r.value];u._deps++;const v=()=>s._asyncData[r.value].execute({cause:"initial",dedupe:e.dedupe}),o=e.server!==!1&&s.payload.serverRendered;{let y=function(i){const f=s._asyncData[i];f!=null&&f._deps&&(f._deps--,f._deps===0&&(f==null||f._off(),N(s,i),f.execute=()=>Promise.resolve(),s._asyncData[i].data.value=h.value))};const d=M();if(d&&o&&e.immediate&&!d.sp&&(d.sp=[]),d&&!d._nuxtOnBeforeMountCbs){d._nuxtOnBeforeMountCbs=[];const i=d._nuxtOnBeforeMountCbs;S(()=>{i.forEach(f=>{f()}),i.splice(0,i.length)}),F(()=>i.splice(0,i.length))}o&&s.isHydrating&&(u.error.value||_!=null)?u.status.value=u.error.value?"error":"success":d&&(s.payload.serverRendered&&s.isHydrating||e.lazy)&&e.immediate?d._nuxtOnBeforeMountCbs.push(v):e.immediate&&v();const P=q(),T=j([r,...e.watch||[]],([i],[f])=>{var E;if(f===i){u._execute({cause:"watch",dedupe:e.dedupe});return}f&&y(f),(E=s._asyncData[i])!=null&&E._deps||(s._asyncData[i]=O(s,i,n,e,e.getCachedData(i,s,{cause:"initial"}))),s._asyncData[i]._deps++,e.immediate&&s._asyncData[i].execute({cause:"initial",dedupe:e.dedupe})});P&&z(()=>{T(),y(r.value)})}const D={data:b(()=>s._asyncData[r.value].data),pending:b(()=>s._asyncData[r.value].pending),status:b(()=>s._asyncData[r.value].status),error:b(()=>s._asyncData[r.value].error),refresh:(...y)=>s._asyncData[r.value].execute(...y),execute:(...y)=>s._asyncData[r.value].execute(...y),clear:()=>N(s,r.value)},g=Promise.resolve(s._asyncDataPromises[r.value]).then(()=>D);return Object.assign(g,D),g}function b(a){return w({get(){return a().value},set(t){a().value=t}})}async function x(a){await new Promise(l=>U(l)),await R().hooks.callHookParallel("app:data:refresh",void 0)}function N(a,t){t in a.payload.data&&(a.payload.data[t]=void 0),t in a.payload._errors&&(a.payload._errors[t]=h.errorValue),a._asyncData[t]&&(a._asyncData[t].data.value=V(a._asyncData[t]._default()),a._asyncData[t].error.value=h.errorValue,a._asyncData[t].status.value="idle"),t in a._asyncDataPromises&&(a._asyncDataPromises[t]&&(a._asyncDataPromises[t].cancelled=!0),a._asyncDataPromises[t]=void 0)}function Y(a,t){const l={};for(const n of t)l[n]=a[n];return l}function O(a,t,l,n,e){var _;(_=a.payload._errors)[t]??(_[t]=h.errorValue);const r=l,s=n.deep?L:B,m=e!=null,c={data:s(m?e:n.default()),pending:w(()=>c.status.value==="pending"),error:I(a.payload._errors,t),status:B("idle"),execute:(u={})=>{if(a._asyncDataPromises[t]){if(X(u.dedupe??n.dedupe))return a._asyncDataPromises[t];a._asyncDataPromises[t].cancelled=!0}if(u.cause==="initial"||a.isHydrating){const o=u.cause==="initial"?e:n.getCachedData(t,a,{cause:u.cause??"refresh:manual"});if(o!=null)return a.payload.data[t]=c.data.value=o,c.error.value=h.errorValue,c.status.value="success",Promise.resolve(o)}c.status.value="pending";const v=new Promise((o,D)=>{try{o(r(a))}catch(g){D(g)}}).then(async o=>{if(v.cancelled)return a._asyncDataPromises[t];let D=o;n.transform&&(D=await n.transform(o)),n.pick&&(D=Y(D,n.pick)),a.payload.data[t]=D,c.data.value=D,c.error.value=h.errorValue,c.status.value="success"}).catch(o=>{if(v.cancelled)return a._asyncDataPromises[t];c.error.value=Q(o),c.data.value=V(n.default()),c.status.value="error"}).finally(()=>{v.cancelled||delete a._asyncDataPromises[t]});return a._asyncDataPromises[t]=v,a._asyncDataPromises[t]},_execute:J((...u)=>c.execute(...u),0,{leading:!0}),_default:n.default,_deps:0,_hash:void 0,_off:a.hook("app:data:refresh",async u=>{(!u||u.includes(t))&&await c.execute({cause:"refresh:hook"})})};return c}export{x as r,$ as u};
